{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerButton from \"./components/answer.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [questionIndex, setIndex] = useState(1);\n  let quiz = [{\n    text: \"How many Ducks?\",\n    answers: [{\n      text: \"5\",\n      isRight: false\n    }, {\n      text: \"2\",\n      isRight: false\n    }, {\n      text: \"3\",\n      isRight: true\n    }, {\n      text: \"4\",\n      isRight: false\n    }]\n  }, {\n    text: \"How many Dogs?\",\n    answers: [{\n      text: \"5123\",\n      isRight: false\n    }, {\n      text: \"2323\",\n      isRight: true\n    }, {\n      text: \"3123\",\n      isRight: false\n    }, {\n      text: \"4123\",\n      isRight: false\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      question: quiz[questionIndex - 1],\n      index: questionIndex,\n      numberOfQuestions: quiz.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: quiz[questionIndex].answers.slice(0, quiz[questionIndex].answers.length).map(answer => /*#__PURE__*/_jsxDEV(AnswerButton, {\n        answer: answer.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YmBBQYn2gz6dNqPtrUjy505jZ1g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/App.js"],"names":["Question","AnswerButton","React","useEffect","useState","Component","App","questionIndex","setIndex","quiz","text","answers","isRight","length","slice","map","answer"],"mappings":";;;;AACA,OAAO,aAAP;AACA,OAAOA,QAAP,MAAqB,0BAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAsCC,SAAtC,QAAwD,OAAxD;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,aAAD,EAAgBC,QAAhB,IAA4BJ,QAAQ,CAAC,CAAD,CAAxC;AAGA,MAAIK,IAAI,GAAG,CAAC;AACNC,IAAAA,IAAI,EAAE,iBADA;AAENC,IAAAA,OAAO,EAAE,CAAC;AACRD,MAAAA,IAAI,EAAE,GADE;AAERE,MAAAA,OAAO,EAAE;AAFD,KAAD,EAGN;AACDF,MAAAA,IAAI,EAAE,GADL;AAEDE,MAAAA,OAAO,EAAE;AAFR,KAHM,EAMN;AACDF,MAAAA,IAAI,EAAE,GADL;AAEDE,MAAAA,OAAO,EAAE;AAFR,KANM,EASN;AACDF,MAAAA,IAAI,EAAE,GADL;AAEDE,MAAAA,OAAO,EAAE;AAFR,KATM;AAFH,GAAD,EAgBL;AACAF,IAAAA,IAAI,EAAE,gBADN;AAEAC,IAAAA,OAAO,EAAE,CAAC;AACRD,MAAAA,IAAI,EAAE,MADE;AAERE,MAAAA,OAAO,EAAE;AAFD,KAAD,EAGN;AACDF,MAAAA,IAAI,EAAE,MADL;AAEDE,MAAAA,OAAO,EAAE;AAFR,KAHM,EAMN;AACDF,MAAAA,IAAI,EAAE,MADL;AAEDE,MAAAA,OAAO,EAAE;AAFR,KANM,EASN;AACDF,MAAAA,IAAI,EAAE,MADL;AAEDE,MAAAA,OAAO,EAAE;AAFR,KATM;AAFT,GAhBK,CAAX;AAoCA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEH,IAAI,CAACF,aAAa,GAAG,CAAjB,CAAxB;AAA8C,MAAA,KAAK,EAAEA,aAArD;AAAoE,MAAA,iBAAiB,EAAEE,IAAI,CAACI;AAA5F;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAEIJ,IAAI,CAACF,aAAD,CAAJ,CAAoBI,OAApB,CAA4BG,KAA5B,CAAkC,CAAlC,EAAqCL,IAAI,CAACF,aAAD,CAAJ,CAAoBI,OAApB,CAA4BE,MAAjE,EAAyEE,GAAzE,CAA6EC,MAAM,iBACjF,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEA,MAAM,CAACN;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArDQJ,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerButton from \"./components/answer.js\";\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\n\nfunction App() {\n  let [questionIndex, setIndex] = useState(1);\n\n\n  let quiz = [{\n        text: \"How many Ducks?\",\n        answers: [{\n          text: \"5\",\n          isRight: false\n        }, {\n          text: \"2\",\n          isRight: false\n        }, {\n          text: \"3\",\n          isRight: true\n        }, {\n          text: \"4\",\n          isRight: false\n        }],\n\n      },{\n        text: \"How many Dogs?\",\n        answers: [{\n          text: \"5123\",\n          isRight: false\n        }, {\n          text: \"2323\",\n          isRight: true\n        }, {\n          text: \"3123\",\n          isRight: false\n        }, {\n          text: \"4123\",\n          isRight: false\n        }],\n      }];\n\n\n\n\n  return (\n    <div className=\"App\">\n\n        <Question question={quiz[questionIndex - 1 ]} index={questionIndex} numberOfQuestions={quiz.length}/>\n        <div className=\"flex flex-wrap\">\n          {\n            quiz[questionIndex].answers.slice(0, quiz[questionIndex].answers.length).map(answer => (\n              <AnswerButton answer={answer.text} />\n            ))\n          }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}