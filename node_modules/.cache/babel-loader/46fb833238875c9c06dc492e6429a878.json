{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/sites/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Question from \"../components/question.js\";\nimport AnswerRow from \"../components/answerRow.js\";\nimport getRequest from \"../components/functions.js\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  let navigate = useNavigate();\n  let params = useParams();\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n  let hello = 1;\n  let quiz = {};\n\n  const handleSetIndex = isRight => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1);\n    }\n\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this), questionIndex < quiz.questions.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: quiz.questions[questionIndex],\n        index: questionIndex + 1,\n        numberOfQuestions: quiz.questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n        answers: quiz.questions[questionIndex].answers.slice(0, quiz.questions[questionIndex].answers.length / 2),\n        getFurther: handleSetIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n        answers: quiz.questions[questionIndex].answers.slice(quiz.questions[questionIndex].answers.length / 2, quiz.questions[questionIndex].answers.length),\n        getFurther: handleSetIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"fyBsaSGbeRuIhaLVYbUjh6XAXAM=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/sites/Quiz.js"],"names":["Question","AnswerRow","getRequest","useNavigate","useParams","React","useEffect","useState","Component","Quiz","navigate","params","questionIndex","setIndex","pointCounter","setPointCounter","hello","quiz","handleSetIndex","isRight","console","log","questions","length","answers","slice"],"mappings":";;;AAAA,OAAO,cAAP;AAEA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AAGA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAsCC,SAAtC,QAAwD,OAAxD;;;;AAGA,SAASC,IAAT,GAAgB;AAAA;;AACd,MAAIC,QAAQ,GAAGP,WAAW,EAA1B;AACA,MAAIQ,MAAM,GAAGP,SAAS,EAAtB;AACA,MAAI,CAACQ,aAAD,EAAgBC,QAAhB,IAA4BN,QAAQ,CAAC,CAAD,CAAxC;AACA,MAAI,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAA9C;AACA,MAAIS,KAAK,GAAG,CAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;;AAOA,QAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACnBJ,MAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AAED;;AACDD,IAAAA,QAAQ,CAACD,aAAa,GAAG,CAAjB,CAAR;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,GARD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAEIP,aAAa,GAAGK,IAAI,CAACK,SAAL,CAAeC,MAA/B,gBACA;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEN,IAAI,CAACK,SAAL,CAAeV,aAAf,CAApB;AAAqD,QAAA,KAAK,EAAEA,aAAa,GAAG,CAA5E;AAA+E,QAAA,iBAAiB,EAAEK,IAAI,CAACK,SAAL,CAAeC;AAAjH;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEN,IAAI,CAACK,SAAL,CAAeV,aAAf,EAA+BY,OAA/B,CAAuCC,KAAvC,CAA6C,CAA7C,EAAgDR,IAAI,CAACK,SAAL,CAAeV,aAAf,EAA+BY,OAA/B,CAAuCD,MAAvC,GAAgD,CAAhG,CAApB;AACE,QAAA,UAAU,EAAEL;AADd;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAED,IAAI,CAACK,SAAL,CAAeV,aAAf,EAA+BY,OAA/B,CAAuCC,KAAvC,CAA6CR,IAAI,CAACK,SAAL,CAAeV,aAAf,EAA8BY,OAA9B,CAAsCD,MAAtC,GAA+C,CAA5F,EAA+FN,IAAI,CAACK,SAAL,CAAeV,aAAf,EAA8BY,OAA9B,CAAsCD,MAArI,CAApB;AACG,QAAA,UAAU,EAAEL;AADf;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADA,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA1CQT,I;UACQN,W,EACFC,S;;;KAFNK,I;AA4CT,eAAeA,IAAf","sourcesContent":["import '../index.css';\n\nimport Question from \"../components/question.js\";\nimport AnswerRow from \"../components/answerRow.js\";\nimport getRequest from \"../components/functions.js\";\n\nimport { useNavigate, useParams } from 'react-router-dom';\n\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\nfunction Quiz() {\n  let navigate = useNavigate();\n  let params = useParams();\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n  let hello = 1;\n  let quiz = {};\n\n\n\n\n\n\n  const handleSetIndex = (isRight) => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1)\n\n    }\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n       <p> Hello </p>\n      { questionIndex < quiz.questions.length  ?\n        <>\n          <Question question={quiz.questions[questionIndex  ]} index={questionIndex + 1} numberOfQuestions={quiz.questions.length}/>\n          <AnswerRow answers={quiz.questions[questionIndex ].answers.slice(0, quiz.questions[questionIndex ].answers.length / 2)}\n            getFurther={handleSetIndex} />\n          <AnswerRow answers={quiz.questions[questionIndex ].answers.slice(quiz.questions[questionIndex].answers.length / 2, quiz.questions[questionIndex].answers.length) }\n             getFurther={handleSetIndex} />\n        </>\n        :\n        <p> Hello </p>\n      }\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}