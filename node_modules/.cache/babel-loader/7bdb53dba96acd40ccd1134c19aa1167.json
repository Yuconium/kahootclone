{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n  let quiz = {\n    questions: [{\n      text: \"How many Ducks?\",\n      answers: [{\n        text: \"Es sind 5 Enten, die fluoreszieren\",\n        isRight: false\n      }, {\n        text: \"2\",\n        isRight: false\n      }, {\n        text: \"3\",\n        isRight: true\n      }, {\n        text: \"4\",\n        isRight: false\n      }]\n    }, {\n      text: \"How many Dogs?\",\n      answers: [{\n        text: \"5123\",\n        isRight: false\n      }, {\n        text: \"2323\",\n        isRight: true\n      }, {\n        text: \"3123\",\n        isRight: false\n      }, {\n        text: \"4123\",\n        isRight: false\n      }]\n    }, {\n      text: \"How many Cats?\",\n      answers: [{\n        text: \"51223\",\n        isRight: false\n      }, {\n        text: \"2323223\",\n        isRight: true\n      }, {\n        text: \"312233\",\n        isRight: false\n      }, {\n        text: \"413223\",\n        isRight: false\n      }]\n    }]\n  };\n\n  const handleSetIndex = isRight => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1);\n    }\n\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questionIndex < quiz.questions.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: quiz.questions[questionIndex],\n        index: questionIndex + 1,\n        numberOfQuestions: quiz.questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n        answers: quiz.questions[questionIndex].answers.slice(0, quiz.questions[questionIndex].answers.length / 2),\n        getFurther: handleSetIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n        answers: quiz.questions[questionIndex].answers.slice(quiz.questions[questionIndex].answers.length / 2, quiz.questions[questionIndex].answers.length),\n        getFurther: handleSetIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"noyf4HTpgj9dwB1d4jYYVgbcgIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/App.js"],"names":["Question","AnswerRow","React","useEffect","useState","Component","App","questionIndex","setIndex","pointCounter","setPointCounter","quiz","questions","text","answers","isRight","handleSetIndex","console","log","length","slice"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\n\nfunction App() {\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n\n  let quiz = {\n    questions: [{\n          text: \"How many Ducks?\",\n          answers: [{\n            text: \"Es sind 5 Enten, die fluoreszieren\",\n            isRight: false\n          },\n          {\n            text: \"2\",\n            isRight: false\n          },\n          {\n            text: \"3\",\n            isRight: true\n          },\n           {\n            text: \"4\",\n            isRight: false\n          }],\n\n        }, {\n          text: \"How many Dogs?\",\n          answers: [{\n            text: \"5123\",\n            isRight: false\n          },\n          {\n             text: \"2323\",\n            isRight: true\n          },{\n            text: \"3123\",\n            isRight: false\n          },\n          {\n            text: \"4123\",\n            isRight: false\n          }]\n        }, {\n            text: \"How many Cats?\",\n            answers: [{\n              text: \"51223\",\n              isRight: false\n            }, {\n              text: \"2323223\",\n              isRight: true\n            }, {\n              text: \"312233\",\n              isRight: false\n            }, {\n              text: \"413223\",\n              isRight: false\n            }]\n          }]\n    };\n\n\n  const handleSetIndex = (isRight) => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1)\n\n    }\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  }\n\n\n  return (\n    <div className=\"App\">\n      { questionIndex < quiz.questions.length  ?\n        <>\n          <Question question={quiz.questions[questionIndex  ]} index={questionIndex + 1} numberOfQuestions={quiz.questions.length}/>\n          <AnswerRow answers={quiz.questions[questionIndex ].answers.slice(0, quiz.questions[questionIndex ].answers.length / 2)}\n            getFurther={handleSetIndex} />\n          <AnswerRow answers={quiz.questions[questionIndex ].answers.slice(quiz.questions[questionIndex].answers.length / 2, quiz.questions[questionIndex].answers.length) }\n             getFurther={handleSetIndex} />\n        </>\n        :\n        <p> Hello </p>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}