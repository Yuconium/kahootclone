{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n  let quiz = [{\n    text: \"How many Ducks?\",\n    answers: [{\n      text: \"Es sind 5 Enten, die fluoreszieren\",\n      isRight: false\n    }, {\n      text: \"2\",\n      isRight: false\n    }, {\n      text: \"3\",\n      isRight: true\n    }, {\n      text: \"4\",\n      isRight: false\n    }]\n  }, {\n    text: \"How many Dogs?\",\n    answers: [{\n      text: \"5123\",\n      isRight: false\n    }, {\n      text: \"2323\",\n      isRight: true\n    }, {\n      text: \"3123\",\n      isRight: false\n    }, {\n      text: \"4123\",\n      isRight: false\n    }]\n  }, {\n    text: \"How many Cats?\",\n    answers: [{\n      text: \"51223\",\n      isRight: false\n    }, {\n      text: \"2323223\",\n      isRight: true\n    }, {\n      text: \"312233\",\n      isRight: false\n    }, {\n      text: \"413223\",\n      isRight: false\n    }]\n  }];\n\n  const handleSetIndex = isRight => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1);\n    }\n\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questionIndex > quiz.length + 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: quiz[questionIndex],\n        index: questionIndex + 1,\n        numberOfQuestions: quiz.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n        answers: quiz[questionIndex].answers.slice(0, quiz[questionIndex].answers.length / 2),\n        getFurther: handleSetIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n        answers: quiz[questionIndex].answers.slice(quiz[questionIndex].answers.length / 2, quiz[questionIndex].answers.length),\n        getFurther: handleSetIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"noyf4HTpgj9dwB1d4jYYVgbcgIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/App.js"],"names":["Question","AnswerRow","React","useEffect","useState","Component","App","questionIndex","setIndex","pointCounter","setPointCounter","quiz","text","answers","isRight","handleSetIndex","console","log","length","slice","undefined"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\n\nfunction App() {\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n\n  let quiz = [{\n          text: \"How many Ducks?\",\n          answers: [{\n            text: \"Es sind 5 Enten, die fluoreszieren\",\n            isRight: false\n          },\n          {\n            text: \"2\",\n            isRight: false\n          }, {\n            text: \"3\",\n            isRight: true\n          },\n           {\n            text: \"4\",\n            isRight: false\n          }],\n\n        }, {\n          text: \"How many Dogs?\",\n          answers: [{\n            text: \"5123\",\n            isRight: false\n          },{\n             text: \"2323\",\n            isRight: true\n          },{\n            text: \"3123\",\n            isRight: false\n          },\n          {\n            text: \"4123\",\n            isRight: false\n          }]\n        }, {\n            text: \"How many Cats?\",\n            answers: [{\n              text: \"51223\",\n              isRight: false\n            }, {\n              text: \"2323223\",\n              isRight: true\n            }, {\n              text: \"312233\",\n              isRight: false\n            }, {\n              text: \"413223\",\n              isRight: false\n            }]\n          }];\n\n\n  const handleSetIndex = (isRight) => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1)\n\n    }\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  }\n\n\n  return (\n    <div className=\"App\">\n      { questionIndex > quiz.length + 1 ?\n        <>\n          <Question question={quiz[questionIndex  ]} index={questionIndex + 1} numberOfQuestions={quiz.length}/>\n          <AnswerRow answers={quiz[questionIndex ].answers.slice(0, quiz[questionIndex ].answers.length / 2)}\n            getFurther={handleSetIndex} />\n          <AnswerRow answers={quiz[questionIndex ].answers.slice(quiz[questionIndex].answers.length / 2, quiz[questionIndex].answers.length) }\n             getFurther={handleSetIndex} />\n        </>\n        :\n        undefined\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}