{"ast":null,"code":"import _slicedToArray from\"/home/levis/Dokumente/Websites/kahootclone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'../index.css';import Question from\"../components/question.js\";import AnswerRow from\"../components/answerRow.js\";import{useNavigate,useParams}from'react-router-dom';import React,{useEffect,useState,Component}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Quiz(){var navigate=useNavigate();var params=useParams();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),questionIndex=_useState2[0],setIndex=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),pointCounter=_useState4[0],setPointCounter=_useState4[1];var hello=1;var quiz={wins:[{name:\"Levis\",count:2}],questions:[{text:\"How many Ducks?\",answers:[{text:\"Es sind 5 Enten, die fluoreszieren\",isRight:false},{text:\"2\",isRight:false},{text:\"3\",isRight:true},{text:\"4\",isRight:false}]},{text:\"How many Dogs?\",answers:[{text:\"5123\",isRight:false},{text:\"2323\",isRight:true},{text:\"3123\",isRight:false},{text:\"4123\",isRight:false}]},{text:\"How many Cats?\",answers:[{text:\"51223\",isRight:false},{text:\"2323223\",isRight:true},{text:\"312233\",isRight:false},{text:\"413223\",isRight:false}]}]};var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),text=_useState6[0],setText=_useState6[1];useEffect(function(){fetch(\"http://localhost:8000/echo\").then(function(response){return response.json();}).then(function(data){return setText(data.message);});});var handleSetIndex=function handleSetIndex(isRight){if(isRight==true){setPointCounter(pointCounter+1);}setIndex(questionIndex+1);console.log(pointCounter);console.log(isRight);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\" \",text,\" \"]}),questionIndex<quiz.questions.length?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Question,{question:quiz.questions[questionIndex],index:questionIndex+1,numberOfQuestions:quiz.questions.length}),/*#__PURE__*/_jsx(AnswerRow,{answers:quiz.questions[questionIndex].answers.slice(0,quiz.questions[questionIndex].answers.length/2),getFurther:handleSetIndex}),/*#__PURE__*/_jsx(AnswerRow,{answers:quiz.questions[questionIndex].answers.slice(quiz.questions[questionIndex].answers.length/2,quiz.questions[questionIndex].answers.length),getFurther:handleSetIndex})]}):/*#__PURE__*/_jsx(\"p\",{children:\" Hello \"})]});}export default Quiz;","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/sites/Quiz.js"],"names":["Question","AnswerRow","useNavigate","useParams","React","useEffect","useState","Component","Quiz","navigate","params","questionIndex","setIndex","pointCounter","setPointCounter","hello","quiz","wins","name","count","questions","text","answers","isRight","setText","fetch","then","response","json","data","message","handleSetIndex","console","log","length","slice"],"mappings":"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","sourcesContent":["import '../index.css';\n\nimport Question from \"../components/question.js\";\nimport AnswerRow from \"../components/answerRow.js\";\n\nimport { useNavigate, useParams } from 'react-router-dom';\n\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\nfunction Quiz() {\n  let navigate = useNavigate();\n  let params = useParams();\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n  let hello = 1;\n  let quiz = {\n    wins: [\n        {\n          name: \"Levis\",\n          count: 2\n        }\n      ],\n\n    questions: [\n      {\n          text: \"How many Ducks?\",\n          answers: [{\n            text: \"Es sind 5 Enten, die fluoreszieren\",\n            isRight: false\n          },\n          {\n            text: \"2\",\n            isRight: false\n          },\n          {\n            text: \"3\",\n            isRight: true\n          },\n           {\n            text: \"4\",\n            isRight: false\n          }],\n\n        },\n      {\n          text: \"How many Dogs?\",\n          answers: [{\n            text: \"5123\",\n            isRight: false\n          },\n          {\n             text: \"2323\",\n            isRight: true\n          },{\n            text: \"3123\",\n            isRight: false\n          },\n          {\n            text: \"4123\",\n            isRight: false\n          }]\n        },\n      {\n            text: \"How many Cats?\",\n            answers: [{\n              text: \"51223\",\n              isRight: false\n            }, {\n              text: \"2323223\",\n              isRight: true\n            }, {\n              text: \"312233\",\n              isRight: false\n            }, {\n              text: \"413223\",\n              isRight: false\n            }]\n          }\n      ]\n    };\n\n\n  let [text, setText] = useState(\"\")\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/echo\").then((response)=>response.json())\n    .then((data)=> setText(data.message));\n    \n  })\n\n\n\n  const handleSetIndex = (isRight) => {\n    if (isRight == true) {\n      setPointCounter(pointCounter + 1)\n\n    }\n    setIndex(questionIndex + 1);\n    console.log(pointCounter);\n    console.log(isRight);\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <p> {text} </p>\n      { questionIndex < quiz.questions.length  ?\n        <>\n          <Question question={quiz.questions[questionIndex  ]} index={questionIndex + 1} numberOfQuestions={quiz.questions.length}/>\n          <AnswerRow answers={quiz.questions[questionIndex ].answers.slice(0, quiz.questions[questionIndex ].answers.length / 2)}\n            getFurther={handleSetIndex} />\n          <AnswerRow answers={quiz.questions[questionIndex ].answers.slice(quiz.questions[questionIndex].answers.length / 2, quiz.questions[questionIndex].answers.length) }\n             getFurther={handleSetIndex} />\n        </>\n        :\n        <p> Hello </p>\n      }\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}