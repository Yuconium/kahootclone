{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n  let quiz = [{\n    text: \"How many Ducks?\",\n    answers: [{\n      text: \"Es sind 5 Enten, die fluoreszieren\",\n      isRight: false\n    }, {\n      text: \"2\",\n      isRight: false\n    }, {\n      text: \"3\",\n      isRight: true\n    }, {\n      text: \"4\",\n      isRight: false\n    }]\n  }, {\n    text: \"How many Dogs?\",\n    answers: [{\n      text: \"5123\",\n      isRight: false\n    }, {\n      text: \"2323\",\n      isRight: true\n    }, {\n      text: \"3123\",\n      isRight: false\n    }, {\n      text: \"4123\",\n      isRight: false\n    }]\n  }, {\n    text: \"How many Cats?\",\n    answers: [{\n      text: \"51223\",\n      isRight: false\n    }, {\n      text: \"2323223\",\n      isRight: true\n    }, {\n      text: \"312233\",\n      isRight: false\n    }, {\n      text: \"413223\",\n      isRight: false\n    }]\n  }];\n\n  const handleSetIndex = hello => {\n    setIndex(questionIndex + 1);\n    console.log(hello);\n  };\n\n  useEffect(() => {\n    console.log(questionIndex);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      question: quiz[questionIndex],\n      index: questionIndex + 1,\n      numberOfQuestions: quiz.questionslength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n      answers: quiz[questionIndex].answers.slice(0, quiz[questionIndex].answers.length / 2),\n      getFurther: handleSetIndex,\n      counter: quiz.counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n      answers: quiz[questionIndex].answers.slice(quiz[questionIndex].answers.length / 2, quiz[questionIndex].answers.length),\n      getFurther: handleSetIndex,\n      setPointCounter: handlePointCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f+ikYK9V58mKczgcwFKbtYuF+u4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/App.js"],"names":["Question","AnswerRow","React","useEffect","useState","Component","App","questionIndex","setIndex","pointCounter","setPointCounter","quiz","text","answers","isRight","handleSetIndex","hello","console","log","questionslength","slice","length","counter","handlePointCounter"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\n\nfunction App() {\n  let [questionIndex, setIndex] = useState(0);\n  let [pointCounter, setPointCounter] = useState(0);\n\n  let quiz = [{\n          text: \"How many Ducks?\",\n          answers: [{\n            text: \"Es sind 5 Enten, die fluoreszieren\",\n            isRight: false\n          }, {\n            text: \"2\",\n            isRight: false\n          }, {\n            text: \"3\",\n            isRight: true\n          }, {\n            text: \"4\",\n            isRight: false\n          }],\n\n        },{\n          text: \"How many Dogs?\",\n          answers: [{\n            text: \"5123\",\n            isRight: false\n          },{\n            text: \"2323\",\n            isRight: true\n          },{\n            text: \"3123\",\n            isRight: false\n          },{\n            text: \"4123\",\n            isRight: false\n          }]\n        }, {\n            text: \"How many Cats?\",\n            answers: [{\n              text: \"51223\",\n              isRight: false\n            }, {\n              text: \"2323223\",\n              isRight: true\n            }, {\n              text: \"312233\",\n              isRight: false\n            }, {\n              text: \"413223\",\n              isRight: false\n            }]\n          }\n          ];\n\n\n  const handleSetIndex = (hello) => {\n\n    setIndex(questionIndex + 1);\n\n    console.log(hello);\n  }\n\n  useEffect(() => {\n    console.log(questionIndex);\n\n  })\n\n  return (\n    <div className=\"App\">\n\n        <Question question={quiz[questionIndex  ]} index={questionIndex + 1} numberOfQuestions={quiz.questionslength}/>\n        <AnswerRow answers={quiz[questionIndex ].answers.slice(0, quiz[questionIndex ].answers.length / 2)}\n          getFurther={handleSetIndex} counter={quiz.counter}/>\n        <AnswerRow answers={quiz[questionIndex ].answers.slice(quiz[questionIndex].answers.length / 2, quiz[questionIndex].answers.length) }\n           getFurther={handleSetIndex} setPointCounter={handlePointCounter}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}