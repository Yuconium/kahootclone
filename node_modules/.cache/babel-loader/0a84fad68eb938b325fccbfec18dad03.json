{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/components/slideInDialogBox.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport React, { useEffect, useState, useRef, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SlideInDialogBox(_ref) {\n  _s();\n\n  let {\n    func,\n    isOn\n  } = _ref;\n  const styles = {\n    transform: `translate(-50vw, -50vh)`\n  };\n  let [name, setName] = useState(\"\");\n  let [background, setBackground] = useState(\"\");\n  let [pos, setPos] = useState(\"left-1\");\n\n  function move(x, y) {\n    return `translate(${x}vw, ${y}vh)`;\n  }\n\n  useEffect(() => {\n    if (isOn == true) {\n      styles.transform = move(50, 50);\n      setBackground(\"bg-black\");\n      setPos(\"left-1\");\n    } else {\n      setBackground(\"\");\n      styles.transform = move(-50, -50);\n      setPos(\"left-80\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"width-auto relative height-auto z-10 opacity-25 transform duration-300 ease-in-out \" + background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute \" + pos,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"rounded-xl tranform duration-300 ease-in-out hover:scale-110 p-1 m-1 border-black border-2 p-4\",\n        value: name,\n        onClick: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 6\n  }, this);\n}\n\n_s(SlideInDialogBox, \"UKE6E+9/6mkpYQPgKnyUEHZ7xOY=\");\n\n_c = SlideInDialogBox;\nexport default SlideInDialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideInDialogBox\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/components/slideInDialogBox.js"],"names":["React","useEffect","useState","useRef","Component","SlideInDialogBox","func","isOn","styles","transform","name","setName","background","setBackground","pos","setPos","move","x","y","e","target","value"],"mappings":";;;AAAA,OAAO,cAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA+D,OAA/D;;;AAGA,SAASC,gBAAT,OAAuC;AAAA;;AAAA,MAAb;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAa;AAMnC,QAAMC,MAAM,GAAG;AACXC,IAAAA,SAAS,EAAG;AADD,GAAf;AAGA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,QAAD,CAA5B;;AAEA,WAASc,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AACnB,WAAQ,aAAYD,CAAE,OAAMC,CAAE,KAA9B;AACA;;AAIDjB,EAAAA,SAAS,CAAC,MAAM;AAClB,QAAIM,IAAI,IAAI,IAAZ,EAAkB;AACjBC,MAAAA,MAAM,CAACC,SAAP,GAAmBO,IAAI,CAAC,EAAD,EAAK,EAAL,CAAvB;AACAH,MAAAA,aAAa,CAAC,UAAD,CAAb;AACAE,MAAAA,MAAM,CAAC,QAAD,CAAN;AACA,KAJD,MAIO;AACNF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAL,MAAAA,MAAM,CAACC,SAAP,GAAmBO,IAAI,CAAC,CAAC,EAAF,EAAM,CAAC,EAAP,CAAvB;AACAD,MAAAA,MAAM,CAAC,SAAD,CAAN;AACA;AACD,GAVW,EAUT,EAVS,CAAT;AAeA,sBACC;AAAK,IAAA,SAAS,EAAE,wFAAwFH,UAAxG;AAAA,2BACF;AAAM,MAAA,SAAS,EAAE,cAAcE,GAA/B;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEO;AACC,QAAA,SAAS,EAAC,gGADX;AAEC,QAAA,KAAK,EAAEJ,IAFR;AAGC,QAAA,OAAO,EAAES,CAAC,IAAIR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAHtB;AAAA;AAAA;AAAA;AAAA,cAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADD;AAgBH;;GAlDQhB,gB;;KAAAA,gB;AAsDT,eAAeA,gBAAf","sourcesContent":["import '../index.css';\n\nimport React, { useEffect, useState, useRef, Component }  from 'react';\n\n\nfunction SlideInDialogBox({func, isOn}){\n\n\n\n\n\n    const styles = { \n        transform: `translate(-50vw, -50vh)` \n    };\n    let [name, setName] = useState(\"\");\n    let [background, setBackground] = useState(\"\");\n    let [pos, setPos] = useState(\"left-1\");\n\n    function move(x, y) {\n    \treturn `translate(${x}vw, ${y}vh)`\n    }\n\n\n\n    useEffect(() => {\n\t\tif (isOn == true) {\n\t\t\tstyles.transform = move(50, 50);\n\t\t\tsetBackground(\"bg-black\");\n\t\t\tsetPos(\"left-1\")\n\t\t} else {\n\t\t\tsetBackground(\"\");\n\t\t\tstyles.transform = move(-50, -50);\n\t\t\tsetPos(\"left-80\")\n\t\t}\n\t}, [])\n\n\n\n\n    return (\n    \t<div className={\"width-auto relative height-auto z-10 opacity-25 transform duration-300 ease-in-out \" + background }>\n\t\t\t<div  className={\"absolute \" + pos}>\n\t\t\t\t<p> Name: </p>\n        \t\t<input \n        \t\t\tclassName=\"rounded-xl tranform duration-300 ease-in-out hover:scale-110 p-1 m-1 border-black border-2 p-4\"\n        \t\t\tvalue={name}\n        \t\t\tonClick={e => setName(e.target.value)}\n\n        \t\t/>\n      \t\t</div>\t\t\n\n\t\t</div>\n        \n    );\n\n}\n\n\n\nexport default SlideInDialogBox;"]},"metadata":{},"sourceType":"module"}