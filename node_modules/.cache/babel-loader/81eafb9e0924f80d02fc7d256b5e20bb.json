{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [questionIndex, setIndex] = useState(0);\n  let quiz = {\n    counter: 0[({\n      text: \"How many Ducks?\",\n      answers: [{\n        text: \"Es sind 5 Enten, die fluoreszieren\",\n        isRight: false\n      }, {\n        text: \"2\",\n        isRight: false\n      }, {\n        text: \"3\",\n        isRight: true\n      }, {\n        text: \"4\",\n        isRight: false\n      }]\n    }, {\n      text: \"How many Dogs?\",\n      answers: [{\n        text: \"5123\",\n        isRight: false\n      }, {\n        text: \"2323\",\n        isRight: true\n      }, {\n        text: \"3123\",\n        isRight: false\n      }, {\n        text: \"4123\",\n        isRight: false\n      }]\n    }, {\n      text: \"How many Cats?\",\n      answers: [{\n        text: \"51223\",\n        isRight: false\n      }, {\n        text: \"2323223\",\n        isRight: true\n      }, {\n        text: \"312233\",\n        isRight: false\n      }, {\n        text: \"413223\",\n        isRight: false\n      }]\n    })]\n  };\n\n  const handleSetIndex = () => {\n    if (questionIndex != quiz.length) {\n      setIndex(questionIndex + 1);\n    }\n\n    console.log(questionIndex);\n  };\n\n  useEffect(() => {\n    console.log(questionIndex);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      question: quiz[questionIndex],\n      index: questionIndex + 1,\n      numberOfQuestions: quiz.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n      answers: quiz[questionIndex].answers.slice(0, quiz[questionIndex].answers.length / 2),\n      getFurther: handleSetIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnswerRow, {\n      answers: quiz[questionIndex].answers.slice(quiz[questionIndex].answers.length / 2, quiz[questionIndex].answers.length),\n      getFurther: handleSetIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vMiszJj2ccacJYm/Y6wApTRIm5A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/App.js"],"names":["Question","AnswerRow","React","useEffect","useState","Component","App","questionIndex","setIndex","quiz","counter","text","answers","isRight","handleSetIndex","length","console","log","slice"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerRow from \"./components/answerRow.js\";\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\n\nfunction App() {\n  let [questionIndex, setIndex] = useState(0);\n\n\n  let quiz = {\n    counter: 0\n      [{\n          text: \"How many Ducks?\",\n          answers: [{\n            text: \"Es sind 5 Enten, die fluoreszieren\",\n            isRight: false\n          }, {\n            text: \"2\",\n            isRight: false\n          }, {\n            text: \"3\",\n            isRight: true\n          }, {\n            text: \"4\",\n            isRight: false\n          }],\n\n        },{\n          text: \"How many Dogs?\",\n          answers: [{\n            text: \"5123\",\n            isRight: false\n          },{\n            text: \"2323\",\n            isRight: true\n          },{\n            text: \"3123\",\n            isRight: false\n          },{\n            text: \"4123\",\n            isRight: false\n          }]\n        }, {\n            text: \"How many Cats?\",\n            answers: [{\n              text: \"51223\",\n              isRight: false\n            }, {\n              text: \"2323223\",\n              isRight: true\n            }, {\n              text: \"312233\",\n              isRight: false\n            }, {\n              text: \"413223\",\n              isRight: false\n            }]\n          }\n          ]\n      };\n\n\n  const handleSetIndex = () => {\n    if (questionIndex != quiz.length) {\n      setIndex(questionIndex + 1)\n    }\n    console.log(questionIndex);\n  }\n\n  useEffect(() => {\n    console.log(questionIndex);\n\n  })\n\n  return (\n    <div className=\"App\">\n\n        <Question question={quiz[questionIndex  ]} index={questionIndex + 1} numberOfQuestions={quiz.length}/>\n        <AnswerRow answers={quiz[questionIndex ].answers.slice(0, quiz[questionIndex ].answers.length / 2)}\n          getFurther={handleSetIndex}/>\n        <AnswerRow answers={quiz[questionIndex ].answers.slice(quiz[questionIndex].answers.length / 2, quiz[questionIndex].answers.length) }\n           getFurther={handleSetIndex} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}