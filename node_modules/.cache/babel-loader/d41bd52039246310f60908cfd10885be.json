{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerButton from \"./components/answer.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [questionIndex, setIndex] = useState(0);\n  let quiz = [{\n    text: \"How many Ducks?\",\n    answers: [\"4\", \"6\", \"5\", \"3\"],\n    rightAnswer: 0\n  }, {\n    text: \"How many Dogs?\",\n    answers: [\"5\", \"3\", \"55\", \"6\"],\n    rightAnswer: 2\n  }];\n\n  const handleIndex = () => {\n    if (questionIndex > 0 && questionIndex < quiz.length) {\n      setIndex(questionIndex + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Question, {\n      question: quiz[questionIndex],\n      numberOfIndex: questionIndex + 1,\n      numberOfQuestions: quiz.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: quiz[questionIndex].answers.map(text => /*#__PURE__*/_jsxDEV(AnswerButton, {\n        answer: text,\n        isRight: handleIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"THeCJoUonNk1UaFk7wnCfjv7PF8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/App.js"],"names":["Question","AnswerButton","React","useEffect","useState","Component","App","questionIndex","setIndex","quiz","text","answers","rightAnswer","handleIndex","length","map"],"mappings":";;;;AACA,OAAO,aAAP;AACA,OAAOA,QAAP,MAAqB,0BAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAGA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAsCC,SAAtC,QAAwD,OAAxD;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,aAAD,EAAgBC,QAAhB,IAA4BJ,QAAQ,CAAC,CAAD,CAAxC;AAGA,MAAIK,IAAI,GAAG,CAAC;AACJC,IAAAA,IAAI,EAAE,iBADF;AAEJC,IAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFL;AAGJC,IAAAA,WAAW,EAAE;AAHT,GAAD,EAKL;AACEF,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,GAAjB,CAFX;AAGEC,IAAAA,WAAW,EAAE;AAHf,GALK,CAAX;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIN,aAAa,GAAG,CAAhB,IAAqBA,aAAa,GAAGE,IAAI,CAACK,MAA9C,EAAsD;AACpDN,MAAAA,QAAQ,CAACD,aAAa,GAAG,CAAjB,CAAR;AACD;AAEF,GALD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEE,IAAI,CAACF,aAAD,CAAxB;AAAyC,MAAA,aAAa,EAAEA,aAAa,GAAG,CAAxE;AAA2E,MAAA,iBAAiB,EAAEE,IAAI,CAACK;AAAnG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAEIL,IAAI,CAACF,aAAD,CAAJ,CAAoBI,OAApB,CAA4BI,GAA5B,CAAgCL,IAAI,iBAClC,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEA,IAAtB;AAA4B,QAAA,OAAO,EAAEG;AAArC;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxCQP,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './index.css';\nimport Question from \"./components/question.js\";\nimport AnswerButton from \"./components/answer.js\";\n\n\nimport React, { useEffect, useState,  Component }  from 'react';\n\n\nfunction App() {\n  let [questionIndex, setIndex] = useState(0);\n\n\n  let quiz = [{\n          text: \"How many Ducks?\",\n          answers: [\"4\", \"6\", \"5\", \"3\"],\n          rightAnswer: 0\n        },\n        {\n          text: \"How many Dogs?\",\n          answers: [\"5\", \"3\", \"55\", \"6\"],\n          rightAnswer: 2\n        }\n      ];\n\n\n  const handleIndex = () => {\n    if (questionIndex > 0 && questionIndex < quiz.length) {\n      setIndex(questionIndex + 1);\n    }\n\n  }\n\n\n  return (\n    <div className=\"App\">\n        <Question question={quiz[questionIndex]} numberOfIndex={questionIndex + 1} numberOfQuestions={quiz.length}/>\n        <div className=\"flex\">\n          {\n            quiz[questionIndex].answers.map(text => (\n              <AnswerButton answer={text} isRight={handleIndex} />\n              \n            ))\n          }\n\n        </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}