{"ast":null,"code":"var _jsxFileName = \"/home/levis/Dokumente/Websites/kahootclone/src/components/slideInDialogBox.js\",\n    _s = $RefreshSig$();\n\nimport '../index.css';\nimport Button from \"./button.js\";\nimport React, { useEffect, useState, useRef, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SlideInDialogBox(_ref) {\n  _s();\n\n  let {\n    func,\n    isOn\n  } = _ref;\n  let [name, setName] = useState(\"\");\n  let [background, setBackground] = useState(\"\");\n  let [pos, setPos] = useState(\"left-80\");\n  useEffect(() => {\n    if (isOn == true) {\n      setBackground(\"bg-black\");\n      setPos(\"left-80\");\n    } else {\n      setBackground(\"bg-black\");\n      setPos(\"left-1\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"width-auto relative height-auto z-10 opacity-25 transform duration-300 ease-in-out \" + background,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute \" + pos,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"rounded-xl tranform duration-300 ease-in-out hover:scale-110 p-1 m-1 border-black border-2 p-4\",\n        value: name,\n        onClick: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        click: () => func(name),\n        text: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 6\n  }, this);\n}\n\n_s(SlideInDialogBox, \"SMrgNHi0qcIqkL2TAkbhL87+FiI=\");\n\n_c = SlideInDialogBox;\nexport default SlideInDialogBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideInDialogBox\");","map":{"version":3,"sources":["/home/levis/Dokumente/Websites/kahootclone/src/components/slideInDialogBox.js"],"names":["Button","React","useEffect","useState","useRef","Component","SlideInDialogBox","func","isOn","name","setName","background","setBackground","pos","setPos","e","target","value"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA+D,OAA/D;;;AAGA,SAASC,gBAAT,OAAuC;AAAA;;AAAA,MAAb;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAa;AAKnC,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,SAAD,CAA5B;AAIAD,EAAAA,SAAS,CAAC,MAAM;AAClB,QAAIM,IAAI,IAAI,IAAZ,EAAkB;AAEjBI,MAAAA,aAAa,CAAC,UAAD,CAAb;AACAE,MAAAA,MAAM,CAAC,SAAD,CAAN;AACA,KAJD,MAIO;AACNF,MAAAA,aAAa,CAAC,UAAD,CAAb;AAEAE,MAAAA,MAAM,CAAC,QAAD,CAAN;AACA;AACD,GAVW,EAUT,EAVS,CAAT;AAeA,sBACC;AAAK,IAAA,SAAS,EAAE,wFAAwFH,UAAxG;AAAA,2BACF;AAAM,MAAA,SAAS,EAAE,cAAcE,GAA/B;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEO;AACC,QAAA,SAAS,EAAC,gGADX;AAEC,QAAA,KAAK,EAAEJ,IAFR;AAGC,QAAA,OAAO,EAAEM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAHtB;AAAA;AAAA;AAAA;AAAA,cAFP,eAQQ,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,MAAMV,IAAI,CAACE,IAAD,CAAzB;AACE,QAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,cARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADD;AAmBH;;GA7CQH,gB;;KAAAA,gB;AAiDT,eAAeA,gBAAf","sourcesContent":["import '../index.css';\nimport Button from \"./button.js\";\nimport React, { useEffect, useState, useRef, Component }  from 'react';\n\n\nfunction SlideInDialogBox({func, isOn}){\n\n\n\n\n    let [name, setName] = useState(\"\");\n    let [background, setBackground] = useState(\"\");\n    let [pos, setPos] = useState(\"left-80\");\n\n\n\n    useEffect(() => {\n\t\tif (isOn == true) {\n\t\t\t\n\t\t\tsetBackground(\"bg-black\");\n\t\t\tsetPos(\"left-80\")\n\t\t} else {\n\t\t\tsetBackground(\"bg-black\");\n\t\t\n\t\t\tsetPos(\"left-1\")\n\t\t}\n\t}, [])\n\n\n\n\n    return (\n    \t<div className={\"width-auto relative height-auto z-10 opacity-25 transform duration-300 ease-in-out \" + background }>\n\t\t\t<div  className={\"absolute \" + pos}>\n\t\t\t\t<p> Name: </p>\n        \t\t<input \n        \t\t\tclassName=\"rounded-xl tranform duration-300 ease-in-out hover:scale-110 p-1 m-1 border-black border-2 p-4\"\n        \t\t\tvalue={name}\n        \t\t\tonClick={e => setName(e.target.value)}\n\n        \t\t/>\n         \t\t<Button click={() => func(name)} \n         \t\t\t\ttext=\"Send\"\n         \t\t/>\n      \t\t</div>\t\t\n\n\t\t</div>\n        \n    );\n\n}\n\n\n\nexport default SlideInDialogBox;"]},"metadata":{},"sourceType":"module"}