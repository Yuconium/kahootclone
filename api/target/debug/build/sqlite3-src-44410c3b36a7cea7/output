cargo:rerun-if-env-changed=SQLITE3_NO_PKG_CONFIG
cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu
cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu
cargo:rerun-if-env-changed=HOST_PKG_CONFIG
cargo:rerun-if-env-changed=PKG_CONFIG
cargo:rerun-if-env-changed=SQLITE3_STATIC
cargo:rerun-if-env-changed=SQLITE3_DYNAMIC
cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu
cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu
cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH
cargo:rerun-if-env-changed=PKG_CONFIG_PATH
cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu
cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu
cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR
cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR
cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu
cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu
cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR
cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
TARGET = Some("x86_64-unknown-linux-gnu")
OPT_LEVEL = Some("0")
HOST = Some("x86_64-unknown-linux-gnu")
CC_x86_64-unknown-linux-gnu = None
CC_x86_64_unknown_linux_gnu = None
HOST_CC = None
CC = None
CFLAGS_x86_64-unknown-linux-gnu = None
CFLAGS_x86_64_unknown_linux_gnu = None
HOST_CFLAGS = None
CFLAGS = None
CRATE_CC_NO_DEFAULTS = None
DEBUG = Some("true")
CARGO_CFG_TARGET_FEATURE = Some("fxsr,sse,sse2")
running: "cc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-fno-omit-frame-pointer" "-m64" "-Wall" "-Wextra" "-o" "/home/levis/Dokumente/Websites/kahootclone/api/target/debug/build/sqlite3-src-44410c3b36a7cea7/out/source/sqlite3.o" "-c" "source/sqlite3.c"
cargo:warning=source/sqlite3.c: In function ‘strftimeFunc’:
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:22792:52: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=22792 |                       z==zBuf ? SQLITE_TRANSIENT : SQLITE_DYNAMIC);
cargo:warning=      |                                                    ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3ErrorWithMsg’:
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:31292:54: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=31292 |     sqlite3ValueSetStr(db->pErr, -1, z, SQLITE_UTF8, SQLITE_DYNAMIC);
cargo:warning=      |                                                      ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3VdbeMemSetStr’:
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:76753:15: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=76753 |     if( xDel==SQLITE_DYNAMIC ){
cargo:warning=      |               ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c: In function ‘valueFromExpr’:
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:77165:55: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=77165 |       sqlite3ValueSetStr(pVal, -1, zVal, SQLITE_UTF8, SQLITE_DYNAMIC);
cargo:warning=      |                                                       ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:77217:29: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=77217 |                          0, SQLITE_DYNAMIC);
cargo:warning=      |                             ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3VdbeExec’:
cargo:warning=source/sqlite3.c:92880:38: warning: cast between incompatible function types from ‘int (*)(u32,  void *, void *, void *)’ {aka ‘int (*)(unsigned int,  void *, void *, void *)’} to ‘void (*)(void *, const char *)’ [-Wcast-function-type]
cargo:warning=92880 |       void (*x)(void*,const char*) = (void(*)(void*,const char*))db->xTrace;
cargo:warning=      |                                      ^
cargo:warning=source/sqlite3.c: In function ‘printfFunc’:
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:116930:25: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=116930 |                         SQLITE_DYNAMIC);
cargo:warning=       |                         ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c: In function ‘generateColumnNames’:
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:130752:58: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=130752 |         sqlite3VdbeSetColName(v, i, COLNAME_NAME, zName, SQLITE_DYNAMIC);
cargo:warning=       |                                                          ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c:14581:27: warning: cast between incompatible function types from ‘int (*)(void *)’ to ‘void (*)(void *)’ [-Wcast-function-type]
cargo:warning=14581 | #define SQLITE_DYNAMIC   ((sqlite3_destructor_type)sqlite3MallocSize)
cargo:warning=      |                           ^
cargo:warning=source/sqlite3.c:130759:52: note: in expansion of macro ‘SQLITE_DYNAMIC’
cargo:warning=130759 |       sqlite3VdbeSetColName(v, i, COLNAME_NAME, z, SQLITE_DYNAMIC);
cargo:warning=       |                                                    ^~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3_trace’:
cargo:warning=source/sqlite3.c:162260:16: warning: cast between incompatible function types from ‘void (*)(void *, const char *)’ to ‘int (*)(u32,  void *, void *, void *)’ {aka ‘int (*)(unsigned int,  void *, void *, void *)’} [-Wcast-function-type]
cargo:warning=162260 |   db->xTrace = (int(*)(u32,void*,void*,void*))xTrace;
cargo:warning=       |                ^
cargo:warning=source/sqlite3.c: In function ‘sqlite3_db_status’:
cargo:warning=source/sqlite3.c:21615:10: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=21615 |       op = SQLITE_DBSTATUS_CACHE_WRITE+1;
cargo:warning=      |       ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c:21617:5: note: here
cargo:warning=21617 |     case SQLITE_DBSTATUS_CACHE_HIT:
cargo:warning=      |     ^~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3_str_vappendf’:
cargo:warning=source/sqlite3.c:28493:19: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=28493 |         flag_long = sizeof(char*)==sizeof(i64) ? 2 :
cargo:warning=      |         ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cargo:warning=28494 |                      sizeof(char*)==sizeof(long int) ? 1 : 0;
cargo:warning=      |                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c:28496:7: note: here
cargo:warning=28496 |       case etORDINAL:
cargo:warning=      |       ^~~~
cargo:warning=source/sqlite3.c:28498:19: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=28498 |         cThousand = 0;
cargo:warning=      |         ~~~~~~~~~~^~~
cargo:warning=source/sqlite3.c:28500:7: note: here
cargo:warning=28500 |       case etDECIMAL:
cargo:warning=      |       ^~~~
cargo:warning=source/sqlite3.c: In function ‘resolveP2Values’:
cargo:warning=source/sqlite3.c:78345:13: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=78345 |           if( pOp->p2!=0 ) p->readOnly = 0;
cargo:warning=      |             ^
cargo:warning=source/sqlite3.c:78348:9: note: here
cargo:warning=78348 |         case OP_AutoCommit:
cargo:warning=      |         ^~~~
cargo:warning=source/sqlite3.c:78386:26: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=78386 |         case OP_VFilter: {
cargo:warning=      |                          ^
cargo:warning=source/sqlite3.c:78395:9: note: here
cargo:warning=78395 |         default: {
cargo:warning=      |         ^~~~~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3VdbeExec’:
cargo:warning=source/sqlite3.c:86152:5: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=86152 |   if( (pIn3->flags & MEM_Null)==0 ) break;
cargo:warning=      |     ^
cargo:warning=source/sqlite3.c:86186:1: note: here
cargo:warning=86186 | case OP_Halt: {
cargo:warning=      | ^~~~
cargo:warning=source/sqlite3.c:86321:15: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=86321 |   pOp->opcode = OP_String;
cargo:warning=      |               ^
cargo:warning=source/sqlite3.c:86338:1: note: here
cargo:warning=86338 | case OP_String: {          /* out2 */
cargo:warning=      | ^~~~
cargo:warning=source/sqlite3.c:89603:19: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=89603 | case OP_IfNoHope: {     /* jump, in3 */
cargo:warning=      |                   ^
cargo:warning=source/sqlite3.c:89611:1: note: here
cargo:warning=89611 | case OP_NoConflict:     /* jump, in3 */
cargo:warning=      | ^~~~
cargo:warning=source/sqlite3.c:90537:38: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=90537 |   p->aCounter[SQLITE_STMTSTATUS_SORT]++;
cargo:warning=      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
cargo:warning=source/sqlite3.c:90552:1: note: here
cargo:warning=90552 | case OP_Rewind: {        /* jump */
cargo:warning=      | ^~~~
cargo:warning=source/sqlite3.c:91889:15: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=91889 |   pOp->opcode = OP_AggStep1;
cargo:warning=      |               ^
cargo:warning=source/sqlite3.c:91892:1: note: here
cargo:warning=91892 | case OP_AggStep1: {
cargo:warning=      | ^~~~
cargo:warning=source/sqlite3.c: In function ‘resolveExprStep’:
cargo:warning=source/sqlite3.c:98598:20: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=98598 |     case TK_ISNOT: {
cargo:warning=      |                    ^
cargo:warning=source/sqlite3.c:98614:5: note: here
cargo:warning=98614 |     case TK_BETWEEN:
cargo:warning=      |     ^~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3ExprCodeTarget’:
cargo:warning=source/sqlite3.c:103296:25: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=103296 |     case TK_AGG_COLUMN: {
cargo:warning=       |                         ^
cargo:warning=source/sqlite3.c:103321:5: note: here
cargo:warning=103321 |     case TK_COLUMN: {
cargo:warning=       |     ^~~~
cargo:warning=source/sqlite3.c: In function ‘exprImpliesNotNull’:
cargo:warning=source/sqlite3.c:104875:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=104875 |       if( exprImpliesNotNull(pParse, p->pRight, pNN, iTab, seenNot) ) return 1;
cargo:warning=       |         ^
cargo:warning=source/sqlite3.c:104878:5: note: here
cargo:warning=104878 |     case TK_SPAN:
cargo:warning=       |     ^~~~
cargo:warning=source/sqlite3.c: In function ‘impliesNotNullRow’:
cargo:warning=source/sqlite3.c:105007:17: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=105007 |     case TK_GE: {
cargo:warning=       |                 ^
cargo:warning=source/sqlite3.c:105026:5: note: here
cargo:warning=105026 |     default:
cargo:warning=       |     ^~~~~~~
cargo:warning=source/sqlite3.c: In function ‘fkActionTrigger’:
cargo:warning=source/sqlite3.c:120056:11: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=120056 |         if( !pChanges ){
cargo:warning=       |           ^
cargo:warning=source/sqlite3.c:120060:7: note: here
cargo:warning=120060 |       default:
cargo:warning=       |       ^~~~~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3GenerateConstraintChecks’:
cargo:warning=source/sqlite3.c:121991:17: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=121991 |         onError = OE_Abort;
cargo:warning=       |                 ^
cargo:warning=source/sqlite3.c:121994:7: note: here
cargo:warning=121994 |       case OE_Rollback:
cargo:warning=       |       ^~~~
cargo:warning=source/sqlite3.c:122052:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=122052 |         sqlite3UpsertDoUpdate(pParse, pUpsert, pTab, 0, iDataCur);
cargo:warning=       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c:122056:7: note: here
cargo:warning=122056 |       case OE_Ignore: {
cargo:warning=       |       ^~~~
cargo:warning=source/sqlite3.c:122273:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=122273 |         sqlite3UpsertDoUpdate(pParse, pUpsert, pTab, pIdx, iIdxCur+ix);
cargo:warning=       |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cargo:warning=source/sqlite3.c:122277:7: note: here
cargo:warning=122277 |       case OE_Ignore: {
cargo:warning=       |       ^~~~
cargo:warning=source/sqlite3.c: In function ‘sqlite3GetToken’:
cargo:warning=source/sqlite3.c:159328:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=159328 |       if( !sqlite3Isdigit(z[1]) )
cargo:warning=       |         ^
cargo:warning=source/sqlite3.c:159337:5: note: here
cargo:warning=159337 |     case CC_DIGIT: {
cargo:warning=       |     ^~~~
cargo:warning=source/sqlite3.c:159427:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
cargo:warning=159427 |       if( z[1]=='\'' ){
cargo:warning=       |         ^
cargo:warning=source/sqlite3.c:159441:5: note: here
cargo:warning=159441 |     case CC_ID: {
cargo:warning=       |     ^~~~
exit status: 0
AR_x86_64-unknown-linux-gnu = None
AR_x86_64_unknown_linux_gnu = None
HOST_AR = None
AR = None
running: "ar" "cq" "/home/levis/Dokumente/Websites/kahootclone/api/target/debug/build/sqlite3-src-44410c3b36a7cea7/out/libsqlite3.a" "/home/levis/Dokumente/Websites/kahootclone/api/target/debug/build/sqlite3-src-44410c3b36a7cea7/out/source/sqlite3.o"
exit status: 0
running: "ar" "s" "/home/levis/Dokumente/Websites/kahootclone/api/target/debug/build/sqlite3-src-44410c3b36a7cea7/out/libsqlite3.a"
exit status: 0
cargo:rustc-link-lib=static=sqlite3
cargo:rustc-link-search=native=/home/levis/Dokumente/Websites/kahootclone/api/target/debug/build/sqlite3-src-44410c3b36a7cea7/out
